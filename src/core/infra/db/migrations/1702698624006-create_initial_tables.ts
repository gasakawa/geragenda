import { MigrationInterface, QueryRunner } from 'typeorm';

export class CreateInitialTables1702698624006 implements MigrationInterface {
  name = 'CreateInitialTables1702698624006';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE "config"."tenants" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "name" text NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "cnpj" text, CONSTRAINT "PK_53be67a04681c66b87ee27c9321" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."addresses" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "street" text NOT NULL, "number" integer NOT NULL, "zipCode" text, "neighborhood" text, "city" text, "state" text, "tenant_id" bigint, CONSTRAINT "PK_745d8f43d3af10ab8247465e450" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."plan" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "name" text NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "monthly_price" numeric(18,2) NOT NULL, "discount_first_month" numeric(18,2) NOT NULL, "annually_price" numeric(18,2) NOT NULL, "discount_first_year" numeric(18,2) NOT NULL, "max_staff" integer NOT NULL DEFAULT '0', "max_sms" integer NOT NULL DEFAULT '0', "max_email" integer NOT NULL DEFAULT '0', CONSTRAINT "PK_54a2b686aed3b637654bf7ddbb3" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."tenant_services" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "name" text NOT NULL, "price" numeric(18,2) NOT NULL DEFAULT '0', "discount" numeric(18,2) DEFAULT '0', "duration" numeric(18,2) NOT NULL DEFAULT '0', "category_id" bigint, "tenant_id" bigint, CONSTRAINT "PK_1b2cb3fef53fb04901839764993" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."categories" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "name" text NOT NULL, "description" text, CONSTRAINT "PK_24dbc6126a28ff948da33e97d3b" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."roles" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "name" text NOT NULL, CONSTRAINT "PK_c1433d71a4838793a49dcad46ab" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."users" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "full_name" text NOT NULL, "email" text NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "mobile_number" text NOT NULL, "tenant_id" bigint, CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "app"."schedule_services" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "client_id" bigint NOT NULL, "tenant_id" bigint NOT NULL, "staff_id" bigint NOT NULL, "tenant_service_id" bigint NOT NULL, "date_scheduled" TIME WITH TIME ZONE NOT NULL, CONSTRAINT "PK_cb0b94f10eab852f9a08f348590" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "app"."schedules" ("id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIME WITH TIME ZONE NOT NULL DEFAULT now(), "deleted_at" TIME WITH TIME ZONE, "tenant_id" bigint NOT NULL, "staff_id" bigint NOT NULL, "tenant_service_id" bigint, "date_scheduled" TIME WITH TIME ZONE NOT NULL, "is_available" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_7e33fc2ea755a5765e3564e66dd" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "config"."user_roles" ("user_id" bigint NOT NULL, "role_id" bigint NOT NULL, CONSTRAINT "PK_23ed6f04fe43066df08379fd034" PRIMARY KEY ("user_id", "role_id"))`,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_87b8888186ca9769c960e92687" ON "config"."user_roles" ("user_id") `,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_b23c65e50a758245a33ee35fda" ON "config"."user_roles" ("role_id") `,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."addresses" ADD CONSTRAINT "FK_5a8b0c1bf617346cce2fa9e64ff" FOREIGN KEY ("tenant_id") REFERENCES "config"."tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."tenant_services" ADD CONSTRAINT "FK_900fa6b9f1617e01d424a046dfb" FOREIGN KEY ("category_id") REFERENCES "config"."categories"("id") ON DELETE SET NULL ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."tenant_services" ADD CONSTRAINT "FK_93cb9ad0efb575961405ce13d9a" FOREIGN KEY ("tenant_id") REFERENCES "config"."tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."users" ADD CONSTRAINT "FK_109638590074998bb72a2f2cf08" FOREIGN KEY ("tenant_id") REFERENCES "config"."tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" ADD CONSTRAINT "FK_5dac444a86166f9f9c01720f9f8" FOREIGN KEY ("client_id") REFERENCES "config"."users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" ADD CONSTRAINT "FK_a0900f1ffd5ddf104adecef7547" FOREIGN KEY ("staff_id") REFERENCES "config"."users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" ADD CONSTRAINT "FK_69437c3717c943f7346fad1187c" FOREIGN KEY ("tenant_id") REFERENCES "config"."tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" ADD CONSTRAINT "FK_9408749411ea2980868c7cb3e63" FOREIGN KEY ("tenant_service_id") REFERENCES "config"."tenant_services"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedules" ADD CONSTRAINT "FK_419857fc68975b6df572ad288d1" FOREIGN KEY ("tenant_id") REFERENCES "config"."tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedules" ADD CONSTRAINT "FK_5a20190fbec0f0160ce79133d4d" FOREIGN KEY ("staff_id") REFERENCES "config"."users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedules" ADD CONSTRAINT "FK_c9df7e2e56f2f368ea000439d43" FOREIGN KEY ("tenant_service_id") REFERENCES "config"."tenant_services"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."user_roles" ADD CONSTRAINT "FK_87b8888186ca9769c960e926870" FOREIGN KEY ("user_id") REFERENCES "config"."users"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."user_roles" ADD CONSTRAINT "FK_b23c65e50a758245a33ee35fda1" FOREIGN KEY ("role_id") REFERENCES "config"."roles"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `ALTER TABLE "config"."user_roles" DROP CONSTRAINT "FK_b23c65e50a758245a33ee35fda1"`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."user_roles" DROP CONSTRAINT "FK_87b8888186ca9769c960e926870"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedules" DROP CONSTRAINT "FK_c9df7e2e56f2f368ea000439d43"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedules" DROP CONSTRAINT "FK_5a20190fbec0f0160ce79133d4d"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedules" DROP CONSTRAINT "FK_419857fc68975b6df572ad288d1"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" DROP CONSTRAINT "FK_9408749411ea2980868c7cb3e63"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" DROP CONSTRAINT "FK_69437c3717c943f7346fad1187c"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" DROP CONSTRAINT "FK_a0900f1ffd5ddf104adecef7547"`,
    );
    await queryRunner.query(
      `ALTER TABLE "app"."schedule_services" DROP CONSTRAINT "FK_5dac444a86166f9f9c01720f9f8"`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."users" DROP CONSTRAINT "FK_109638590074998bb72a2f2cf08"`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."tenant_services" DROP CONSTRAINT "FK_93cb9ad0efb575961405ce13d9a"`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."tenant_services" DROP CONSTRAINT "FK_900fa6b9f1617e01d424a046dfb"`,
    );
    await queryRunner.query(
      `ALTER TABLE "config"."addresses" DROP CONSTRAINT "FK_5a8b0c1bf617346cce2fa9e64ff"`,
    );
    await queryRunner.query(
      `DROP INDEX "config"."IDX_b23c65e50a758245a33ee35fda"`,
    );
    await queryRunner.query(
      `DROP INDEX "config"."IDX_87b8888186ca9769c960e92687"`,
    );
    await queryRunner.query(`DROP TABLE "config"."user_roles"`);
    await queryRunner.query(`DROP TABLE "app"."schedules"`);
    await queryRunner.query(`DROP TABLE "app"."schedule_services"`);
    await queryRunner.query(`DROP TABLE "config"."users"`);
    await queryRunner.query(`DROP TABLE "config"."roles"`);
    await queryRunner.query(`DROP TABLE "config"."categories"`);
    await queryRunner.query(`DROP TABLE "config"."tenant_services"`);
    await queryRunner.query(`DROP TABLE "config"."plan"`);
    await queryRunner.query(`DROP TABLE "config"."addresses"`);
    await queryRunner.query(`DROP TABLE "config"."tenants"`);
  }
}
